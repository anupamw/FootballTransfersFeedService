name: Deploy to k3s

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DROPLET_IP: ${{ secrets.DROPLET_IP }}
  DROPLET_USER: root
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests  # For testing
    
    - name: Run application tests
      run: |
        echo "Running application tests..."
        python test_app.py http://localhost:8000 || echo "Tests will be run after deployment"
    
    - name: Test Docker build
      run: |
        echo "Testing Docker build..."
        docker build --platform linux/amd64 -t football-transfers-app:test .
        echo "✅ Docker build test passed"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image for x86_64
      run: |
        docker build --platform linux/amd64 -t football-transfers-app:latest .
    
    - name: Save Docker image
      run: |
        docker save football-transfers-app:latest -o football-transfers-app.tar
        ls -la football-transfers-app.tar
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts
    
    - name: Copy image to droplet
      run: |
        scp football-transfers-app.tar $DROPLET_USER@$DROPLET_IP:/tmp/
    
    - name: Copy Kubernetes manifests
      run: |
        scp -r k8s/ $DROPLET_USER@$DROPLET_IP:/tmp/
    
    - name: Deploy to k3s
      run: |
        ssh $DROPLET_USER@$DROPLET_IP << 'EOF'
          set -e
          echo "🧹 Cleaning up old image..."
          sudo k3s ctr images rm docker.io/library/football-transfers-app:latest || true
          
          echo "📦 Loading new image into k3s..."
          sudo k3s ctr images import /tmp/football-transfers-app.tar
          
          echo "🔍 Verifying image is loaded..."
          sudo k3s ctr images ls | grep football-transfers-app
          
          echo "📋 Applying Kubernetes manifests..."
          sudo kubectl apply -f /tmp/k8s/namespace.yaml
          sudo kubectl apply -f /tmp/k8s/deployment.yaml
          sudo kubectl apply -f /tmp/k8s/service.yaml
          
          echo "🔄 Rolling out deployment..."
          sudo kubectl rollout restart deployment/football-transfers-app -n football-transfers
          
          echo "⏳ Waiting for deployment to be ready..."
          sudo kubectl rollout status deployment/football-transfers-app -n football-transfers --timeout=300s
          
          echo "✅ Deployment completed successfully!"
          echo "📊 Current pod status:"
          sudo kubectl get pods -n football-transfers
          
          echo "🌐 Service status:"
          sudo kubectl get svc -n football-transfers
        EOF
    
    - name: Health check
      run: |
        echo "Waiting for app to be ready..."
        sleep 30
        
        # Test the health endpoint
        for i in {1..10}; do
          if curl -f http://$DROPLET_IP:30080/health; then
            echo "✅ Health check passed!"
            break
          else
            echo "⏳ Health check failed, retrying in 10 seconds... (attempt $i/10)"
            sleep 10
          fi
        done
    
    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        python test_app.py http://$DROPLET_IP:30080
    
    - name: Cleanup
      if: always()
      run: |
        ssh $DROPLET_USER@$DROPLET_IP << 'EOF'
          echo "🧹 Cleaning up temporary files..."
          rm -f /tmp/football-transfers-app.tar
          rm -rf /tmp/k8s/
        EOF 