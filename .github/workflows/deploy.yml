name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -c "import fastapi; print('FastAPI version:', fastapi.__version__)"
        python -c "from main import app; print('App imported successfully')"
        python -c "import uvicorn; print('Uvicorn version:', uvicorn.__version__)"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t football-transfers-app:${{ github.sha }} .
        docker tag football-transfers-app:${{ github.sha }} football-transfers-app:latest
    
    - name: Deploy to DigitalOcean
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        script: |
          echo "🚀 Starting Docker deployment..."
          
          # Create app directory if it doesn't exist
          mkdir -p /var/www/football-transfers-app
          cd /var/www/football-transfers-app
          
          echo "📥 Pulling latest changes..."
          git pull origin main || git clone https://github.com/${{ github.repository }}.git .
          
          echo "🐳 Building Docker image..."
          docker build -t football-transfers-app:latest .
          
          echo "🛑 Stopping existing container..."
          docker stop football-transfers-app || true
          docker rm football-transfers-app || true
          
          echo "🚀 Starting new container..."
          docker run -d \
            --name football-transfers-app \
            --restart unless-stopped \
            -p 8000:8000 \
            -e PYTHONPATH=/app \
            football-transfers-app:latest
          
          echo "⏳ Waiting for container to be ready..."
          sleep 10
          
          echo "🔍 Checking container status..."
          docker ps | grep football-transfers-app
          
          echo "🧪 Testing application health..."
          if curl -f http://localhost:8000/health; then
            echo "✅ Deployment successful! Application is healthy."
            echo "🌐 Your app is available at: http://${{ secrets.DIGITALOCEAN_HOST }}:8000"
            echo "📚 API docs: http://${{ secrets.DIGITALOCEAN_HOST }}:8000/docs"
          else
            echo "❌ Deployment failed! Application is not responding."
            echo "📋 Container logs:"
            docker logs football-transfers-app
            exit 1
          fi
          
          echo "🧹 Cleaning up old images..."
          docker image prune -f 